rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin or moderator
    function canModerate() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Moderator'];
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Helper function to check if user owns the resource
    function isOwner(resourceData) {
      return isAuthenticated() && resourceData.authorId == request.auth.uid;
    }

    // Users collection - users can read/write their own profile
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }

    // Forum threads - authenticated users can create, everyone can read
    match /forumThreads/{threadId} {
      allow read: if true; // Public reading
      allow create: if isAuthenticated() && 
                   request.resource.data.authorId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   (isOwner(resource.data) || canModerate());
      allow delete: if canModerate();
    }

    // Forum replies - similar to threads
    match /forumThreads/{threadId}/replies/{replyId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
                   request.resource.data.authorId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   (isOwner(resource.data) || canModerate());
      allow delete: if canModerate();
    }

    // Resources - authenticated users can upload, everyone can read
    match /resources/{resourceId} {
      allow read: if true; // Public reading
      allow create: if isAuthenticated() && 
                   request.resource.data.uploaderId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   (isOwner(resource.data) || canModerate());
      allow delete: if canModerate();
    }

    // Events - read publicly, only admins can create/modify
    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }

    // Moderation logs - admin and moderators can read/write
    match /moderationLogs/{logId} {
      allow read, write: if canModerate();
    }

    // Default deny for all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}